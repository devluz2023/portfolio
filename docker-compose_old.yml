version: '3.8'

services:
  # mysql_master:
  #   image: mysql:latest
  #   environment:
  #     MYSQL_ROOT_PASSWORD: master_password
  #     MYSQL_DATABASE: mydatabase
  #   volumes:
  #     - mysql_master_data:/var/lib/mysql
  #     - ./master_my.cnf:/etc/mysql/my.cnf
  #   networks:
  #     - mysql_network
  #   ports:
  #     - "3306:3306"
  #   restart: always

  # mysql_slave:
  #   image: mysql:latest
  #   environment:
  #     MYSQL_ROOT_PASSWORD: slave_password
  #     MYSQL_DATABASE: mydatabase
  #     MYSQL_MASTER_HOST: mysql_master
  #     MYSQL_MASTER_USER: root
  #     MYSQL_MASTER_PASSWORD: master_password
  #   volumes:
  #     - mysql_slave_data:/var/lib/mysql
  #     - ./slave_my.cnf:/etc/mysql/my.cnf
  #   networks:
  #     - mysql_network
  #   restart: always


  sql_server:
    image: mcr.microsoft.com/mssql/server:latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "sqlserver_password"
    ports:
      - "1433:1433"
    networks:
      - mysql_network
    restart: always

  # redis:
  #   image: redis:latest
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - mysql_network
  #   restart: always

  # mongo:
  #   image: mongo:latest
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - mysql_network
  #   restart: always


  # airflow:
  #   image: puckel/docker-airflow:latest
  #   depends_on:
  #     - mysql_master
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - mysql_network
  #   restart: always

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - mysql_network
  #   restart: always

  # nagios:
  #   image: jasonrivers/nagios:latest
  #   ports:
  #     - "8088:80"
  #   networks:
  #     - mysql_network
  #   restart: always

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - mysql_network
  #   restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

 
  oracle_db:
    image: "container-registry.oracle.com/database/express:latest"
    restart: "unless-stopped"
    ports:
      - 1521:1521
      # - 8080:8080
      - 5500:5500
    # volumes:
    #   - ./setup-scripts:/opt/oracle/scripts/setup
    #   - ./dump:/opt/oracle/dump
    environment: 
      - "ORACLE_PWD=welcome123"
      - "NAME=oracle-test"
      # schema of the dump you want to import
      # - "SOURCE_SCHEMA=change-or-delete-me"
      # # tablespace of the dump you want to import
      # - "SOURCE_TABLESPACE=change-or-delete-me"
      # # you may want to exclude `GRANT`: `EXCLUDE=USER,GRANT', if your dump contains them
      # # if you dont have anything to exclude, remove the variable
      # - "EXCLUDE=user"


  # graylog:
  #   image: graylog/graylog:latest
  #   environment:
  #     GRAYLOG_PASSWORD_SECRET: somepasswordpepper
  #     GRAYLOG_ROOT_PASSWORD_SHA2: somehashedpassword
  #     GRAYLOG_HTTP_EXTERNAL_URI: http://localhost:9000/
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - mysql_network
  #   restart: always

 

networks:
  mysql_network:
  broker-kafka:
    driver: bridge  
  default:
    name: elastic
    external: false

volumes:
  mysql_master_data:
  mysql_slave_data:
  certs:
    driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local
  metricbeatdata01:
    driver: local
  filebeatdata01:
    driver: local
  logstashdata01:
    driver: local

